./AMRH5writer.C:610:	  nPart, NumberOfStarParticlesOnProcOnLvlEntry, alreadyopenedentry, gridDataName); //#####
./AMRH5writer.C:650:	    nPart_recorded_here, nPart_recorded_here_new); //#####
./AMRH5writer.C:731://    alreadyopenedentry = TRUE;  //now it is fully open   //#####
./Grid_PoissonSolver.C:296://  printf("End divB_p: %g (%g/%d) \n", divSum/size, divSum, size);   //#####
./Star_ComputePhotonRates.C_prev:129:#define GMC_TEST //#####
./Star_ComputePhotonRates.C_prev:162:      Q[0] *= 1 / (1 + exp(-50*(this->last_accretion_rate/mdot_Edd - 0.1))); //#####
./Star_ComputePhotonRates.C_prev:180:      E[0] = ReturnValuesFromSpectrumTable(0.0, 0.0, 3); //##### mean energy if column density=0
./StarParticleMergeMBH.C:82:#define GMC_TEST //#####
./solve_rate_cool.F:555:               if (dtit(i) .ne. dtit(i)) !#####
./solve_rate_cool.F:1367:            if (HIIp(i) .le. 0.0) then  !#####
./StarRoutines.C:351:#define GMC_TEST  //#####
./StarRoutines.C:369:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF
./Star_HitEndpoint.C:28:#define GMC_TEST_5  //##### for 121512_dGF-RTF
./Star_HitEndpoint.C:99:#ifdef GMC_TEST_5  //#####  THIS HAD NO IMPACT...  You stupid...  (check the first if statement in this file -> particle type stayed the same but never listed as Star after first timestep, 12/2012)
./global_data.h:319:EXTERN FLOAT   RandomForcingMachNumber;  //#####
./StarParticleSubtractAccretedMass.C:94:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Star_IsARadiationSource.C:51:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Star_IsARadiationSource.C:54:  //rules[1] = BirthTime < 0; //##### quick test on 03/16/2017 for /u/jkim30/work/enzo-runs/080112_CHaRGe/ic.enzo_1e13vb_nocv_z=6_MBH_noStarRad/DD0261; see your note email in the Draft folder
./Grid_StarParticleHandler.C:839:#define GMC_TEST_5 //#####  for 121512_dGF-RTF, also check star_maker7.F for additional GMC_TEST changes
./Grid_StarParticleHandler.C:1265:// #define GMC_TEST //##### 
./StarParticleFinalize.C:88:#define GMC_TEST //#####
./StarParticleFinalize.C:160:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./star_maker7.F:416:#define NO_KINETIC_FEEDBACK  !#####
./star_maker7.F:443:#define GMC_TEST  !#####  feedback for GMC particle (type=8, temporarily)
./star_maker7.F:463:#define GMC_TEST_5 !#####  for 121512_dGF-RTF
./star_maker7.F:481:cc        !#####  for GMC particle (type=8), SF is peaked at 5 Myrs 
./star_maker7.F:539:#ifdef GMC_TEST_5 !#####  SNIa: no mass return, for 121512_dGF-RTF
./star_maker7.F:560:c#ifdef GMC_TEST_5 !#####  SNIa: energy proportional to mp(n), for 121512_dGF-RTF
./Grid_Shine.C:130:#define GMC_TEST //#####
./Grid_Shine.C:139:#define GMC_TEST_6 //#####
./Grid_Shine.C:230:	if (RadiativeTransferTraceSpectrum) NewPack->Type = 5;  //#####
./Grid_FindAllStarParticles.C:31:#define NO_RESET_MBH_MASS  //#####
./Grid_FindAllStarParticles.C:97:#define NO_GMC_TEST_REMOVE_EXISTING //#####
./Grid_FindAllStarParticles.C:105:#define GMC_TEST //##### identify as Stars only without a certain radius from a center
./Grid_SolveForPotential.C:75:    InverseVolumeElement *= (GravitatingMassFieldDimension[dim] - 1);  //#####
./Grid_UpdateStarParticles.C:42:// #define GMC_TEST  //#####
./RadiativeTransferInitialize.C.orig:169:      TypesToAdd[FieldsToAdd++] = Metallicity;      //#####
./ReadParameterFile.C:1170:     (The counterpart in WriteParameterFile is also commented out) */   //#####
./hydro_rk/Grid_MHDRK2_1stStep.C:131:  this->ReturnHydroRKPointers(Prim, true); //##### added! because Hydro3D needs fractions for species
./hydro_rk/Grid_ReturnOldHydroRKPointers.C:121:  /*   //##### These fields are currently not being used and only causing interpolation problems
./hydro_rk/Grid_UpdatePrim.C:70:  this->ReturnHydroRKPointers(Prim, false);         //##### species in Prim[] are already fractions fractionalized in Grid_RK2_[12]Step -> ReturnHydroRKPointer, thus no need for ReturnMassFraction
./hydro_rk/Grid_UpdatePrim.C:71:  this->ReturnOldHydroRKPointers(OldPrim, false);   //##### whereas species in OldPrim[] are not
./hydro_rk/Grid_UpdatePrim.C:73:  //##### Want to mix species and colors for renormalization?  Normally you don't
./hydro_rk/Grid_UpdatePrim.C:137:  // ORIGINAL   //#####
./hydro_rk/EvolveLevel_RK2.C:428:    RK2SecondStepBaryonDeposit = 1; // set this to (0/1) to (not use/use) this extra step  //#####
./hydro_rk/Grid_RungeKutta2_1stStep.C:126:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./hydro_rk/Grid_RungeKutta2_2ndStep.C:124:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./hydro_rk/TurbulenceInitialize.C:208:    MinimumMassForRefinement[0] /= DensityUnits * pow(LengthUnits,3);  //#####
./hydro_rk/Grid_SetNumberOfColours.C:62:  /*   //##### These fields are currently not being used and only causing interpolation problems
./hydro_rk/Grid_ReturnHydroRKPointers.C:123:  /*   //##### These fields are currently not being used and only causing interpolation problems
./hydro_rk/Grid_UpdateMHDPrim.C:83:  //##### Want to mix species and colors for renormalization?  Normally you don't
./hydro_rk/Grid_UpdateMHDPrim.C:148:  // ORIGINAL   //#####
./hydro_rk/Grid_MHDRK2_2ndStep.C:137:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./Grid_WalkPhotonPackage.C:462:#define GMC_TEST //#####
./Grid_WalkPhotonPackage.C:614:#ifdef GMC_TEST //#####
./Grid_WalkPhotonPackage.C:644:#ifdef GMC_TEST_4 //#####
./Grid_WalkPhotonPackage.C:703:#ifdef GMC_TEST_4 //#####
./Grid_WalkPhotonPackage.C:717:#ifdef GMC_TEST_4 //#####
./Grid_WalkPhotonPackage.C:741:      for (i = 0; i < 3; i++) {   //##### for TraceSpectrum test 3 -> 1
./Grid_AddFeedbackSphere.C:536:#define GMC_TEST //#####
./Grid_AddFeedbackSphere.C:543:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Grid_AddFeedbackSphere.C:715:	sqrt(1 - 1 / (1 + exp(-50*(cstar->last_accretion_rate/mdot_Edd - 0.1)))); //#####
./mbh_maker.C:122:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF   
./Star_SetFeedbackFlag.C:113:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Grid_FinalizeRadiationFields.C:78:#ifdef GMC_TEST_3 //#####
./Grid_FinalizeRadiationFields.C:92:#ifdef GMC_TEST_3 //#####
./Star_Accrete.C:109:#define GMC_TEST //#####
./Star_Accrete.C:113:	  last_accretion_rate*yr, time, accretion_time[0], this_dt, DeltaMass, Mass); //#####
./Star_Accrete.C:116:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Star_Accrete.C:119:	  last_accretion_rate*yr, time, accretion_time[0], this_dt, DeltaMass, Mass); //#####
./WriteStarParticleData.C:53:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./RadiativeTransferInitialize.C:181://      if (TypesToAdd[i] == ExistingTypes[j]) {     //#####
./Grid_DepositBaryons.C_tom_fix:110:			   TargetGrid->GravitatingMassFieldCellSize) ; //- 1;   //#####
./Grid_DepositBaryons.C_tom_fix:131:			   TargetGrid->GravitatingMassFieldCellSize - 1);   //#####
./Star_ComputePhotonRates.C:133:#ifdef GMC_TEST //#####
./Star_ComputePhotonRates.C:146:#define GMC_TEST_5 //#####  for 121512_dGF-RTF
./Star_ComputePhotonRates.C:147:#ifdef GMC_TEST_5 //#####
./Star_ComputePhotonRates.C:166:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF, UV bin only for the real MBH, check your notes, 
./Star_ComputePhotonRates.C:167:#ifdef GMC_TEST_6 //#####
./Star_ComputePhotonRates.C:198:      Q[0] *= 1 / (1 + exp(-50*(this->last_accretion_rate/mdot_Edd - 0.1))); //#####
./Star_ComputePhotonRates.C:216:      E[0] = ReturnValuesFromSpectrumTable(0.0, 0.0, 3); //##### mean energy if column density=0
./Star.h:131:#define GMC_TEST //##### 
./Grid_WriteNewMovieData.C:580:      alreadyopened[ProcessorNumber][thislevel] = FALSE;  //##### nothing hasn't been written
./Grid_FindNewStarParticles.C:62:#define GMC_TEST //##### identify as Stars only within or outside a certain radius from a center
./Grid_FindNewStarParticles.C:99:#define NO_GMC_TEST_2 //##### identify as Stars only within a certain radius from a rotating center
./Star_AccreteAngularMomentum.C:40:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./cool1d_multi.F:728:               if (de(i,j,k) .lt. 0.0) then !#####
./cool1d_multi.F:779:#define GMC_TEST  !#####
./cool1d_multi.F:781:               metalc(i) = metalc(i) * d(i,j,k) * dom   !##### THIS IS NEEDED!? 
./cool1d_multi.F:789:#ifdef UNUSED   !#####
./cool1d_multi.F:805:               if (edot(i) .ne. edot(i)) then    !#####
./Star_CalculateMassAccretion.C:39:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./Star_CalculateMassAccretion.C:313:#define GMC_TEST //#####
./modified_parts:1:./AMRH5writer.C:610:	  nPart, NumberOfStarParticlesOnProcOnLvlEntry, alreadyopenedentry, gridDataName); //#####
./modified_parts:2:./AMRH5writer.C:650:	    nPart_recorded_here, nPart_recorded_here_new); //#####
./modified_parts:3:./AMRH5writer.C:731://    alreadyopenedentry = TRUE;  //now it is fully open   //#####
./modified_parts:4:./Grid_PoissonSolver.C:296://  printf("End divB_p: %g (%g/%d) \n", divSum/size, divSum, size);   //#####
./modified_parts:5:./Star_ComputePhotonRates.C_prev:129:#define GMC_TEST //#####
./modified_parts:6:./Star_ComputePhotonRates.C_prev:162:      Q[0] *= 1 / (1 + exp(-50*(this->last_accretion_rate/mdot_Edd - 0.1))); //#####
./modified_parts:7:./Star_ComputePhotonRates.C_prev:180:      E[0] = ReturnValuesFromSpectrumTable(0.0, 0.0, 3); //##### mean energy if column density=0
./modified_parts:8:./StarParticleMergeMBH.C:82:#define GMC_TEST //#####
./modified_parts:9:./solve_rate_cool.F:555:               if (dtit(i) .ne. dtit(i)) !#####
./modified_parts:10:./solve_rate_cool.F:1367:            if (HIIp(i) .le. 0.0) then  !#####
./modified_parts:11:./StarRoutines.C:351:#define GMC_TEST  //#####
./modified_parts:12:./StarRoutines.C:369:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:13:./Star_HitEndpoint.C:28:#define GMC_TEST_5  //##### for 121512_dGF-RTF
./modified_parts:14:./Star_HitEndpoint.C:99:#ifdef GMC_TEST_5  //#####  THIS HAD NO IMPACT...  You stupid...  (check the first if statement in this file -> particle type stayed the same but never listed as Star after first timestep, 12/2012)
./modified_parts:15:./global_data.h:319:EXTERN FLOAT   RandomForcingMachNumber;  //#####
./modified_parts:16:./StarParticleSubtractAccretedMass.C:94:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:17:./Star_IsARadiationSource.C:51:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:18:./Star_IsARadiationSource.C:54:  //rules[1] = BirthTime < 0; //##### quick test on 03/16/2017 for /u/jkim30/work/enzo-runs/080112_CHaRGe/ic.enzo_1e13vb_nocv_z=6_MBH_noStarRad/DD0261; see your note email in the Draft folder
./modified_parts:19:./Grid_StarParticleHandler.C:839:#define GMC_TEST_5 //#####  for 121512_dGF-RTF, also check star_maker7.F for additional GMC_TEST changes
./modified_parts:20:./Grid_StarParticleHandler.C:1265:// #define GMC_TEST //##### 
./modified_parts:21:./StarParticleFinalize.C:88:#define GMC_TEST //#####
./modified_parts:22:./StarParticleFinalize.C:160:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:23:./star_maker7.F:416:#define NO_KINETIC_FEEDBACK  !#####
./modified_parts:24:./star_maker7.F:443:#define GMC_TEST  !#####  feedback for GMC particle (type=8, temporarily)
./modified_parts:25:./star_maker7.F:463:#define GMC_TEST_5 !#####  for 121512_dGF-RTF
./modified_parts:26:./star_maker7.F:481:cc        !#####  for GMC particle (type=8), SF is peaked at 5 Myrs 
./modified_parts:27:./star_maker7.F:539:#ifdef GMC_TEST_5 !#####  SNIa: no mass return, for 121512_dGF-RTF
./modified_parts:28:./star_maker7.F:560:c#ifdef GMC_TEST_5 !#####  SNIa: energy proportional to mp(n), for 121512_dGF-RTF
./modified_parts:29:./Grid_Shine.C:130:#define GMC_TEST //#####
./modified_parts:30:./Grid_Shine.C:139:#define GMC_TEST_6 //#####
./modified_parts:31:./Grid_Shine.C:230:	if (RadiativeTransferTraceSpectrum) NewPack->Type = 5;  //#####
./modified_parts:32:./Grid_FindAllStarParticles.C:31:#define NO_RESET_MBH_MASS  //#####
./modified_parts:33:./Grid_FindAllStarParticles.C:97:#define NO_GMC_TEST_REMOVE_EXISTING //#####
./modified_parts:34:./Grid_FindAllStarParticles.C:105:#define GMC_TEST //##### identify as Stars only without a certain radius from a center
./modified_parts:35:./Grid_SolveForPotential.C:75:    InverseVolumeElement *= (GravitatingMassFieldDimension[dim] - 1);  //#####
./modified_parts:36:./Grid_UpdateStarParticles.C:42:// #define GMC_TEST  //#####
./modified_parts:37:./RadiativeTransferInitialize.C.orig:169:      TypesToAdd[FieldsToAdd++] = Metallicity;      //#####
./modified_parts:38:./ReadParameterFile.C:1170:     (The counterpart in WriteParameterFile is also commented out) */   //#####
./modified_parts:39:./hydro_rk/Grid_MHDRK2_1stStep.C:131:  this->ReturnHydroRKPointers(Prim, true); //##### added! because Hydro3D needs fractions for species
./modified_parts:40:./hydro_rk/Grid_ReturnOldHydroRKPointers.C:121:  /*   //##### These fields are currently not being used and only causing interpolation problems
./modified_parts:41:./hydro_rk/Grid_UpdatePrim.C:70:  this->ReturnHydroRKPointers(Prim, false);         //##### species in Prim[] are already fractions fractionalized in Grid_RK2_[12]Step -> ReturnHydroRKPointer, thus no need for ReturnMassFraction
./modified_parts:42:./hydro_rk/Grid_UpdatePrim.C:71:  this->ReturnOldHydroRKPointers(OldPrim, false);   //##### whereas species in OldPrim[] are not
./modified_parts:43:./hydro_rk/Grid_UpdatePrim.C:73:  //##### Want to mix species and colors for renormalization?  Normally you don't
./modified_parts:44:./hydro_rk/Grid_UpdatePrim.C:137:  // ORIGINAL   //#####
./modified_parts:45:./hydro_rk/EvolveLevel_RK2.C:428:    RK2SecondStepBaryonDeposit = 1; // set this to (0/1) to (not use/use) this extra step  //#####
./modified_parts:46:./hydro_rk/Grid_RungeKutta2_1stStep.C:126:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./modified_parts:47:./hydro_rk/Grid_RungeKutta2_2ndStep.C:124:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./modified_parts:48:./hydro_rk/TurbulenceInitialize.C:208:    MinimumMassForRefinement[0] /= DensityUnits * pow(LengthUnits,3);  //#####
./modified_parts:49:./hydro_rk/Grid_SetNumberOfColours.C:62:  /*   //##### These fields are currently not being used and only causing interpolation problems
./modified_parts:50:./hydro_rk/Grid_ReturnHydroRKPointers.C:123:  /*   //##### These fields are currently not being used and only causing interpolation problems
./modified_parts:51:./hydro_rk/Grid_UpdateMHDPrim.C:83:  //##### Want to mix species and colors for renormalization?  Normally you don't
./modified_parts:52:./hydro_rk/Grid_UpdateMHDPrim.C:148:  // ORIGINAL   //#####
./modified_parts:53:./hydro_rk/Grid_MHDRK2_2ndStep.C:137:  this->ReturnHydroRKPointers(Prim, true);  //##### added! because Hydro3D needs fractions for species
./modified_parts:54:./Grid_WalkPhotonPackage.C:462:#define GMC_TEST //#####
./modified_parts:55:./Grid_WalkPhotonPackage.C:614:#ifdef GMC_TEST //#####
./modified_parts:56:./Grid_WalkPhotonPackage.C:644:#ifdef GMC_TEST_4 //#####
./modified_parts:57:./Grid_WalkPhotonPackage.C:703:#ifdef GMC_TEST_4 //#####
./modified_parts:58:./Grid_WalkPhotonPackage.C:717:#ifdef GMC_TEST_4 //#####
./modified_parts:59:./Grid_WalkPhotonPackage.C:741:      for (i = 0; i < 3; i++) {   //##### for TraceSpectrum test 3 -> 1
./modified_parts:60:./Grid_AddFeedbackSphere.C:536:#define GMC_TEST //#####
./modified_parts:61:./Grid_AddFeedbackSphere.C:543:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:62:./Grid_AddFeedbackSphere.C:715:	sqrt(1 - 1 / (1 + exp(-50*(cstar->last_accretion_rate/mdot_Edd - 0.1)))); //#####
./modified_parts:63:./mbh_maker.C:122:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF   
./modified_parts:64:./Star_SetFeedbackFlag.C:113:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:65:./Grid_FinalizeRadiationFields.C:78:#ifdef GMC_TEST_3 //#####
./modified_parts:66:./Grid_FinalizeRadiationFields.C:92:#ifdef GMC_TEST_3 //#####
./modified_parts:67:./Star_Accrete.C:109:#define GMC_TEST //#####
./modified_parts:68:./Star_Accrete.C:113:	  last_accretion_rate*yr, time, accretion_time[0], this_dt, DeltaMass, Mass); //#####
./modified_parts:69:./Star_Accrete.C:116:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:70:./Star_Accrete.C:119:	  last_accretion_rate*yr, time, accretion_time[0], this_dt, DeltaMass, Mass); //#####
./modified_parts:71:./WriteStarParticleData.C:53:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:72:./RadiativeTransferInitialize.C:181://      if (TypesToAdd[i] == ExistingTypes[j]) {     //#####
./modified_parts:73:./Grid_DepositBaryons.C_tom_fix:110:			   TargetGrid->GravitatingMassFieldCellSize) ; //- 1;   //#####
./modified_parts:74:./Grid_DepositBaryons.C_tom_fix:131:			   TargetGrid->GravitatingMassFieldCellSize - 1);   //#####
./modified_parts:75:./Star_ComputePhotonRates.C:133:#ifdef GMC_TEST //#####
./modified_parts:76:./Star_ComputePhotonRates.C:146:#define GMC_TEST_5 //#####  for 121512_dGF-RTF
./modified_parts:77:./Star_ComputePhotonRates.C:147:#ifdef GMC_TEST_5 //#####
./modified_parts:78:./Star_ComputePhotonRates.C:166:#define GMC_TEST_6  //#####  for 080112_CHaRGe/1e13vb_aRTF, UV bin only for the real MBH, check your notes, 
./modified_parts:79:./Star_ComputePhotonRates.C:167:#ifdef GMC_TEST_6 //#####
./modified_parts:80:./Star_ComputePhotonRates.C:198:      Q[0] *= 1 / (1 + exp(-50*(this->last_accretion_rate/mdot_Edd - 0.1))); //#####
./modified_parts:81:./Star_ComputePhotonRates.C:216:      E[0] = ReturnValuesFromSpectrumTable(0.0, 0.0, 3); //##### mean energy if column density=0
./modified_parts:82:./Star.h:131:#define GMC_TEST //##### 
./modified_parts:83:./Grid_WriteNewMovieData.C:580:      alreadyopened[ProcessorNumber][thislevel] = FALSE;  //##### nothing hasn't been written
./modified_parts:84:./Grid_FindNewStarParticles.C:62:#define GMC_TEST //##### identify as Stars only within or outside a certain radius from a center
./modified_parts:85:./Grid_FindNewStarParticles.C:99:#define NO_GMC_TEST_2 //##### identify as Stars only within a certain radius from a rotating center
./modified_parts:86:./Star_AccreteAngularMomentum.C:40:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:87:./cool1d_multi.F:728:               if (de(i,j,k) .lt. 0.0) then !#####
./modified_parts:88:./cool1d_multi.F:779:#define GMC_TEST  !#####
./modified_parts:89:./cool1d_multi.F:781:               metalc(i) = metalc(i) * d(i,j,k) * dom   !##### THIS IS NEEDED!? 
./modified_parts:90:./cool1d_multi.F:789:#ifdef UNUSED   !#####
./modified_parts:91:./cool1d_multi.F:805:               if (edot(i) .ne. edot(i)) then    !#####
./modified_parts:92:./Star_CalculateMassAccretion.C:39:#define GMC_TEST_6 //#####  for 080112_CHaRGe/1e13vb_aRTF
./modified_parts:93:./Star_CalculateMassAccretion.C:313:#define GMC_TEST //#####
